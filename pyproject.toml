[project]
name = "duffelbag"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "argon2-cffi>=23.1.0",
    "arkprts",
    "coloredlogs>=15.0.1",
    "piccolo[postgres]>=1.22.0",
    "python-dotenv>=1.0.1",
    "rapidfuzz>=3.10.1",
]

[dependency-groups]
discord = [
    "hikari>=2.1.0",
    "hikari-ryoshu",
    "hikari-tanjun>=2.17.6",
]
speedups = [
    "orjson>=3.10.12",
    "uvloop>=0.21.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "pre-commit>=4.0.1",
    "pyright>=1.1.389",
    "ruff>=0.8.0",
    "slotscheck>=0.19.1",
]

[tool.uv.sources]
arkprts = { git = "https://github.com/thesadru/arkprts" }
hikari-ryoshu = { git = "https://github.com/sharp-eyes/hikari-ryoshu", branch = "refactor/parser" }

[tool.pyright]
pythonVersion = "3.11"
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "**/.*",
    "database/piccolo_migrations",
    ".venv",
]
reportMissingTypeStubs=false

[tool.ruff]
target-version = "py311"
line-length = 120
extend-exclude = [
    "database/piccolo_migrations",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # Magic methods do not need documentation.
    "D105",
    # Class docstrings are at the class level.
    "D107",
    # We use assertions as an in-place alternative to `typing.cast`.
    "S101",
    # Pyright error codes are obnoxiously long.
    "PGH003",
    # TODO / HACK comments do not need to be flagged.
    "FIX002", "FIX004",
    # TODO comments do not need to have an author or issue specified.
    "TD002", "TD003",
    # Function calls in parameter defaults are disnake syntax.
    "B008",
    # We don't use pandas and this triggers on any `.values` access.
    "PD",
]


[tool.ruff.per-file-ignores]
# Allow printing in scripts.
"scripts/*" = ["T201"]
# Wildcard imports are fine in __init__ and more convenient than duplicating
# exports and maintaining them.
"__init__.py" = ["F403", "F405"]
# Code lying in wait for composite unique constraints.
"database/populate.py" = ["ERA"]
# `id` is a very common field name in models
"raw_data/models/*" = ["A003"]
"database/models/*" = ["A003"]
